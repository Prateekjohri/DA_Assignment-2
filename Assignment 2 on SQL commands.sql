use mavenmovies;
-- Q1 Retrieve the total number of rentals made in the Sakila database. 
select count(rental_id) from rental;

-- Q2 Find the average rental duration (in days) of movies rented from the Sakila database.
select avg (datediff (return_date, rental_date)) as AverageRentalDuration from rental;

-- Q3 Display the first name and last name of customers in uppercase. 
select upper(first_name), upper(last_name) from customer; 

-- Q4 Extract the month from the rental date and display it alongside the rental ID
select rental_id, month(rental_date) from rental;

-- Q5 Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
select customer_id, count(rental_id) from rental group by rental_id;

-- Q6 Find the total revenue generated by each store. 

-- Q7 Display the title of the movie, customer's first name, and last name who rented it. 
SELECT 
    title, first_name, last_name
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.rental_id
        JOIN
    customer ON rental.customer_id = customer.customer_id;
    
-- Q8 Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
SELECT 
    first_name,last_name
FROM
    actor
        join
    film_actor ON actor.actor_id = film_actor.actor_id
        JOIN
    film ON film_actor.film_id = film.film_id
WHERE
   title = 'gone with the wind';
    
    -- GROUP BY
-- Q1 Determine the total number of rentals for each category of movies. 
select count(rental_id) from film_category join film on film_category.film_id = film.film_id join inventory on film_category.film_id= inventory.film_id join rental on inventory.inventory_id = rental.inventory_id group by category_id; 

-- Q2 Find the average rental rate of movies in each language. 
select avg(film.rental_rate) as average_rental_rate from film join language on film.language_id = language.language_id group by language.language_id;

-- Q3 Retrieve the customer names along with the total amount they've spent on rentals.
SELECT 
    first_name, last_name, SUM(amount)
FROM
    rental
        JOIN
    payment ON rental.customer_id = payment.customer_id
        JOIN
    customer ON payment.customer_id = customer.customer_id
GROUP BY first_name , last_name;

-- Q4 List the titles of movies rented by each customer in a particular city (e.g., 'London.
 SELECT 
    customer.customer_id,
    customer.first_name,
    customer.last_name,
    city.city,
    film.
    title
FROM
    customer
        JOIN
    address ON customer.address_id = address.address_id
        JOIN
    city ON address.city_id = city.city_id
        JOIN
    rental ON customer.customer_id = rental.customer_id
        JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
        JOIN
    film ON inventory.film_id = film.film_id
WHERE
    city.city = 'london'
    order by 
    customer.customer_id, film.title, city.city; ;

-- Q5 Display the top 5 rented movies along with the number of times they've been rented. 
SELECT 
    title, COUNT(rental_id) AS rental_count
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.inventory_id
GROUP BY title
ORDER BY rental_count DESC
LIMIT 5;

-- Q6 Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
Select 
    customer.customer_id,
    customer.first_name,
    customer.last_name
from 
    customer
join
    rental on customer.customer_id = rental.customer_id
join
    inventory on rental.inventory_id = inventory.inventory_id
join
    store on inventory.store_id = store.store_id
where
    store.store_id in (1, 2)
group by 
    customer.customer_id, customer.first_name, customer.last_name
having
    COUNT(distinct store.store_id) = 2;    